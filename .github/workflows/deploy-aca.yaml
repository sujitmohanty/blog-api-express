name: CD â€¢ Azure Container Apps

on:
  push:
    branches: ['master'] # or your default branch

env:
  AZURE_RESOURCE_GROUP: blog-api-rg
  AZURE_REGION: westeurope # or germanywestcentral if available to you
  CONTAINER_APP_ENV: blog-api-env
  CONTAINER_APP_NAME: blog-api
  GHCR_IMAGE: ghcr.io/${{ github.repository }}:latest
  CONTAINER_PORT: '3000'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Login to Azure using a Service Principal (see "One-time setup" below)
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Ensure RG and ACA Environment exist (idempotent)
      - name: Ensure RG & ACA env
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az group create -n $AZURE_RESOURCE_GROUP -l $AZURE_REGION
            az containerapp env create \
              -g $AZURE_RESOURCE_GROUP -n $CONTAINER_APP_ENV -l $AZURE_REGION --only-show-errors || true

      # Deploy the GHCR image to Container Apps
      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          containerAppEnvironment: ${{ env.CONTAINER_APP_ENV }}
          imageToDeploy: ${{ env.GHCR_IMAGE }}
          registryServer: ghcr.io
          ingress: external
          targetPort: ${{ env.CONTAINER_PORT }}
          environmentVariables: |
            NODE_ENV=production
            PORT=${{ env.CONTAINER_PORT }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            MONGODB_URI=${{ secrets.MONGODB_URI }}
